// source: block_user.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() {
  if (this) { return this; }
  if (typeof window !== 'undefined') { return window; }
  if (typeof global !== 'undefined') { return global; }
  if (typeof self !== 'undefined') { return self; }
  return Function('return this')();
}.call(null));

var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.object.extend(proto, google_protobuf_timestamp_pb);
goog.exportSymbol('proto.BlockUser.ActiveMeasurement', null, global);
goog.exportSymbol('proto.BlockUser.Platform', null, global);
goog.exportSymbol('proto.BlockUser.Token', null, global);
goog.exportSymbol('proto.BlockUser.TokenType', null, global);
goog.exportSymbol('proto.BlockUser.User', null, global);
goog.exportSymbol('proto.BlockUser.UserFilter', null, global);
goog.exportSymbol('proto.BlockUser.UserFilter.Order', null, global);
goog.exportSymbol('proto.BlockUser.UserFilter.SortBy', null, global);
goog.exportSymbol('proto.BlockUser.UserRequest', null, global);
goog.exportSymbol('proto.BlockUser.UserResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.BlockUser.User = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.BlockUser.User, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.BlockUser.User.displayName = 'proto.BlockUser.User';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.BlockUser.UserFilter = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.BlockUser.UserFilter, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.BlockUser.UserFilter.displayName = 'proto.BlockUser.UserFilter';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.BlockUser.Token = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.BlockUser.Token, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.BlockUser.Token.displayName = 'proto.BlockUser.Token';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.BlockUser.ActiveMeasurement = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.BlockUser.ActiveMeasurement, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.BlockUser.ActiveMeasurement.displayName = 'proto.BlockUser.ActiveMeasurement';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.BlockUser.UserRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.BlockUser.UserRequest.repeatedFields_, null);
};
goog.inherits(proto.BlockUser.UserRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.BlockUser.UserRequest.displayName = 'proto.BlockUser.UserRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.BlockUser.UserResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.BlockUser.UserResponse.repeatedFields_, null);
};
goog.inherits(proto.BlockUser.UserResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.BlockUser.UserResponse.displayName = 'proto.BlockUser.UserResponse';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.BlockUser.User.prototype.toObject = function(opt_includeInstance) {
  return proto.BlockUser.User.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.BlockUser.User} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.BlockUser.User.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    optionalId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    email: jspb.Message.getFieldWithDefault(msg, 3, ""),
    password: jspb.Message.getFieldWithDefault(msg, 4, ""),
    image: jspb.Message.getFieldWithDefault(msg, 5, ""),
    externalEncrypted: jspb.Message.getBooleanFieldWithDefault(msg, 6, false),
    externalEncryptionLevel: jspb.Message.getFieldWithDefault(msg, 7, 0),
    internalEncrypted: jspb.Message.getBooleanFieldWithDefault(msg, 8, false),
    internalEncryptionLevel: jspb.Message.getFieldWithDefault(msg, 9, 0),
    metadata: jspb.Message.getFieldWithDefault(msg, 10, ""),
    createdAt: (f = msg.getCreatedAt()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    updatedAt: (f = msg.getUpdatedAt()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    encryptedAt: (f = msg.getEncryptedAt()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    requireEmailVerification: jspb.Message.getBooleanFieldWithDefault(msg, 14, false),
    sendWelcomeEmail: jspb.Message.getBooleanFieldWithDefault(msg, 15, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.BlockUser.User}
 */
proto.BlockUser.User.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.BlockUser.User;
  return proto.BlockUser.User.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.BlockUser.User} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.BlockUser.User}
 */
proto.BlockUser.User.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setOptionalId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setEmail(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setPassword(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setImage(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setExternalEncrypted(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setExternalEncryptionLevel(value);
      break;
    case 8:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setInternalEncrypted(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setInternalEncryptionLevel(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setMetadata(value);
      break;
    case 11:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setCreatedAt(value);
      break;
    case 12:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setUpdatedAt(value);
      break;
    case 13:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setEncryptedAt(value);
      break;
    case 14:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setRequireEmailVerification(value);
      break;
    case 15:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSendWelcomeEmail(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.BlockUser.User.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.BlockUser.User.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.BlockUser.User} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.BlockUser.User.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getOptionalId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getEmail();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getPassword();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getImage();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getExternalEncrypted();
  if (f) {
    writer.writeBool(
      6,
      f
    );
  }
  f = message.getExternalEncryptionLevel();
  if (f !== 0) {
    writer.writeInt32(
      7,
      f
    );
  }
  f = message.getInternalEncrypted();
  if (f) {
    writer.writeBool(
      8,
      f
    );
  }
  f = message.getInternalEncryptionLevel();
  if (f !== 0) {
    writer.writeInt32(
      9,
      f
    );
  }
  f = message.getMetadata();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getCreatedAt();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getUpdatedAt();
  if (f != null) {
    writer.writeMessage(
      12,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getEncryptedAt();
  if (f != null) {
    writer.writeMessage(
      13,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getRequireEmailVerification();
  if (f) {
    writer.writeBool(
      14,
      f
    );
  }
  f = message.getSendWelcomeEmail();
  if (f) {
    writer.writeBool(
      15,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.BlockUser.User.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.BlockUser.User} returns this
 */
proto.BlockUser.User.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string optional_id = 2;
 * @return {string}
 */
proto.BlockUser.User.prototype.getOptionalId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.BlockUser.User} returns this
 */
proto.BlockUser.User.prototype.setOptionalId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string email = 3;
 * @return {string}
 */
proto.BlockUser.User.prototype.getEmail = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.BlockUser.User} returns this
 */
proto.BlockUser.User.prototype.setEmail = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string password = 4;
 * @return {string}
 */
proto.BlockUser.User.prototype.getPassword = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.BlockUser.User} returns this
 */
proto.BlockUser.User.prototype.setPassword = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string image = 5;
 * @return {string}
 */
proto.BlockUser.User.prototype.getImage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.BlockUser.User} returns this
 */
proto.BlockUser.User.prototype.setImage = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional bool external_encrypted = 6;
 * @return {boolean}
 */
proto.BlockUser.User.prototype.getExternalEncrypted = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};


/**
 * @param {boolean} value
 * @return {!proto.BlockUser.User} returns this
 */
proto.BlockUser.User.prototype.setExternalEncrypted = function(value) {
  return jspb.Message.setProto3BooleanField(this, 6, value);
};


/**
 * optional int32 external_encryption_level = 7;
 * @return {number}
 */
proto.BlockUser.User.prototype.getExternalEncryptionLevel = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.BlockUser.User} returns this
 */
proto.BlockUser.User.prototype.setExternalEncryptionLevel = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional bool internal_encrypted = 8;
 * @return {boolean}
 */
proto.BlockUser.User.prototype.getInternalEncrypted = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 8, false));
};


/**
 * @param {boolean} value
 * @return {!proto.BlockUser.User} returns this
 */
proto.BlockUser.User.prototype.setInternalEncrypted = function(value) {
  return jspb.Message.setProto3BooleanField(this, 8, value);
};


/**
 * optional int32 internal_encryption_level = 9;
 * @return {number}
 */
proto.BlockUser.User.prototype.getInternalEncryptionLevel = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.BlockUser.User} returns this
 */
proto.BlockUser.User.prototype.setInternalEncryptionLevel = function(value) {
  return jspb.Message.setProto3IntField(this, 9, value);
};


/**
 * optional string metadata = 10;
 * @return {string}
 */
proto.BlockUser.User.prototype.getMetadata = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.BlockUser.User} returns this
 */
proto.BlockUser.User.prototype.setMetadata = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional google.protobuf.Timestamp created_at = 11;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.BlockUser.User.prototype.getCreatedAt = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 11));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.BlockUser.User} returns this
*/
proto.BlockUser.User.prototype.setCreatedAt = function(value) {
  return jspb.Message.setWrapperField(this, 11, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.BlockUser.User} returns this
 */
proto.BlockUser.User.prototype.clearCreatedAt = function() {
  return this.setCreatedAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.BlockUser.User.prototype.hasCreatedAt = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional google.protobuf.Timestamp updated_at = 12;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.BlockUser.User.prototype.getUpdatedAt = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 12));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.BlockUser.User} returns this
*/
proto.BlockUser.User.prototype.setUpdatedAt = function(value) {
  return jspb.Message.setWrapperField(this, 12, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.BlockUser.User} returns this
 */
proto.BlockUser.User.prototype.clearUpdatedAt = function() {
  return this.setUpdatedAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.BlockUser.User.prototype.hasUpdatedAt = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional google.protobuf.Timestamp encrypted_at = 13;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.BlockUser.User.prototype.getEncryptedAt = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 13));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.BlockUser.User} returns this
*/
proto.BlockUser.User.prototype.setEncryptedAt = function(value) {
  return jspb.Message.setWrapperField(this, 13, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.BlockUser.User} returns this
 */
proto.BlockUser.User.prototype.clearEncryptedAt = function() {
  return this.setEncryptedAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.BlockUser.User.prototype.hasEncryptedAt = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional bool require_email_verification = 14;
 * @return {boolean}
 */
proto.BlockUser.User.prototype.getRequireEmailVerification = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 14, false));
};


/**
 * @param {boolean} value
 * @return {!proto.BlockUser.User} returns this
 */
proto.BlockUser.User.prototype.setRequireEmailVerification = function(value) {
  return jspb.Message.setProto3BooleanField(this, 14, value);
};


/**
 * optional bool send_welcome_email = 15;
 * @return {boolean}
 */
proto.BlockUser.User.prototype.getSendWelcomeEmail = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 15, false));
};


/**
 * @param {boolean} value
 * @return {!proto.BlockUser.User} returns this
 */
proto.BlockUser.User.prototype.setSendWelcomeEmail = function(value) {
  return jspb.Message.setProto3BooleanField(this, 15, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.BlockUser.UserFilter.prototype.toObject = function(opt_includeInstance) {
  return proto.BlockUser.UserFilter.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.BlockUser.UserFilter} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.BlockUser.UserFilter.toObject = function(includeInstance, msg) {
  var f, obj = {
    from: jspb.Message.getFieldWithDefault(msg, 1, 0),
    to: jspb.Message.getFieldWithDefault(msg, 2, 0),
    sort: jspb.Message.getFieldWithDefault(msg, 3, 0),
    order: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.BlockUser.UserFilter}
 */
proto.BlockUser.UserFilter.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.BlockUser.UserFilter;
  return proto.BlockUser.UserFilter.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.BlockUser.UserFilter} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.BlockUser.UserFilter}
 */
proto.BlockUser.UserFilter.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setFrom(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTo(value);
      break;
    case 3:
      var value = /** @type {!proto.BlockUser.UserFilter.SortBy} */ (reader.readEnum());
      msg.setSort(value);
      break;
    case 4:
      var value = /** @type {!proto.BlockUser.UserFilter.Order} */ (reader.readEnum());
      msg.setOrder(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.BlockUser.UserFilter.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.BlockUser.UserFilter.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.BlockUser.UserFilter} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.BlockUser.UserFilter.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFrom();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getTo();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getSort();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = message.getOrder();
  if (f !== 0.0) {
    writer.writeEnum(
      4,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.BlockUser.UserFilter.SortBy = {
  CREATED_AT: 0,
  UPDATE_AT: 1
};

/**
 * @enum {number}
 */
proto.BlockUser.UserFilter.Order = {
  INC: 0,
  DEC: 1
};

/**
 * optional int32 from = 1;
 * @return {number}
 */
proto.BlockUser.UserFilter.prototype.getFrom = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.BlockUser.UserFilter} returns this
 */
proto.BlockUser.UserFilter.prototype.setFrom = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 to = 2;
 * @return {number}
 */
proto.BlockUser.UserFilter.prototype.getTo = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.BlockUser.UserFilter} returns this
 */
proto.BlockUser.UserFilter.prototype.setTo = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional SortBy sort = 3;
 * @return {!proto.BlockUser.UserFilter.SortBy}
 */
proto.BlockUser.UserFilter.prototype.getSort = function() {
  return /** @type {!proto.BlockUser.UserFilter.SortBy} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.BlockUser.UserFilter.SortBy} value
 * @return {!proto.BlockUser.UserFilter} returns this
 */
proto.BlockUser.UserFilter.prototype.setSort = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};


/**
 * optional Order order = 4;
 * @return {!proto.BlockUser.UserFilter.Order}
 */
proto.BlockUser.UserFilter.prototype.getOrder = function() {
  return /** @type {!proto.BlockUser.UserFilter.Order} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {!proto.BlockUser.UserFilter.Order} value
 * @return {!proto.BlockUser.UserFilter} returns this
 */
proto.BlockUser.UserFilter.prototype.setOrder = function(value) {
  return jspb.Message.setProto3EnumField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.BlockUser.Token.prototype.toObject = function(opt_includeInstance) {
  return proto.BlockUser.Token.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.BlockUser.Token} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.BlockUser.Token.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    userId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    blocked: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),
    deviceInfo: jspb.Message.getFieldWithDefault(msg, 4, ""),
    blockedAt: (f = msg.getBlockedAt()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    createdAt: (f = msg.getCreatedAt()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    usedAt: (f = msg.getUsedAt()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    expiresAt: (f = msg.getExpiresAt()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    encrypted: jspb.Message.getBooleanFieldWithDefault(msg, 9, false),
    accessToken: jspb.Message.getFieldWithDefault(msg, 10, ""),
    refreshToken: jspb.Message.getFieldWithDefault(msg, 11, ""),
    internalEncryptionLevel: jspb.Message.getFieldWithDefault(msg, 12, 0),
    loggedInFrom: jspb.Message.getFieldWithDefault(msg, 13, ""),
    type: jspb.Message.getFieldWithDefault(msg, 14, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.BlockUser.Token}
 */
proto.BlockUser.Token.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.BlockUser.Token;
  return proto.BlockUser.Token.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.BlockUser.Token} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.BlockUser.Token}
 */
proto.BlockUser.Token.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setBlocked(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setDeviceInfo(value);
      break;
    case 5:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setBlockedAt(value);
      break;
    case 6:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setCreatedAt(value);
      break;
    case 7:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setUsedAt(value);
      break;
    case 8:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setExpiresAt(value);
      break;
    case 9:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEncrypted(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setAccessToken(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setRefreshToken(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setInternalEncryptionLevel(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setLoggedInFrom(value);
      break;
    case 14:
      var value = /** @type {!proto.BlockUser.TokenType} */ (reader.readEnum());
      msg.setType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.BlockUser.Token.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.BlockUser.Token.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.BlockUser.Token} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.BlockUser.Token.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getUserId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getBlocked();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
  f = message.getDeviceInfo();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getBlockedAt();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getCreatedAt();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getUsedAt();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getExpiresAt();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getEncrypted();
  if (f) {
    writer.writeBool(
      9,
      f
    );
  }
  f = message.getAccessToken();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getRefreshToken();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getInternalEncryptionLevel();
  if (f !== 0) {
    writer.writeInt32(
      12,
      f
    );
  }
  f = message.getLoggedInFrom();
  if (f.length > 0) {
    writer.writeString(
      13,
      f
    );
  }
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      14,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.BlockUser.Token.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.BlockUser.Token} returns this
 */
proto.BlockUser.Token.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string user_id = 2;
 * @return {string}
 */
proto.BlockUser.Token.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.BlockUser.Token} returns this
 */
proto.BlockUser.Token.prototype.setUserId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional bool blocked = 3;
 * @return {boolean}
 */
proto.BlockUser.Token.prototype.getBlocked = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.BlockUser.Token} returns this
 */
proto.BlockUser.Token.prototype.setBlocked = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};


/**
 * optional string device_info = 4;
 * @return {string}
 */
proto.BlockUser.Token.prototype.getDeviceInfo = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.BlockUser.Token} returns this
 */
proto.BlockUser.Token.prototype.setDeviceInfo = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional google.protobuf.Timestamp blocked_at = 5;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.BlockUser.Token.prototype.getBlockedAt = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 5));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.BlockUser.Token} returns this
*/
proto.BlockUser.Token.prototype.setBlockedAt = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.BlockUser.Token} returns this
 */
proto.BlockUser.Token.prototype.clearBlockedAt = function() {
  return this.setBlockedAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.BlockUser.Token.prototype.hasBlockedAt = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional google.protobuf.Timestamp created_at = 6;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.BlockUser.Token.prototype.getCreatedAt = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 6));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.BlockUser.Token} returns this
*/
proto.BlockUser.Token.prototype.setCreatedAt = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.BlockUser.Token} returns this
 */
proto.BlockUser.Token.prototype.clearCreatedAt = function() {
  return this.setCreatedAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.BlockUser.Token.prototype.hasCreatedAt = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional google.protobuf.Timestamp used_at = 7;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.BlockUser.Token.prototype.getUsedAt = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 7));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.BlockUser.Token} returns this
*/
proto.BlockUser.Token.prototype.setUsedAt = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.BlockUser.Token} returns this
 */
proto.BlockUser.Token.prototype.clearUsedAt = function() {
  return this.setUsedAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.BlockUser.Token.prototype.hasUsedAt = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional google.protobuf.Timestamp expires_at = 8;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.BlockUser.Token.prototype.getExpiresAt = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 8));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.BlockUser.Token} returns this
*/
proto.BlockUser.Token.prototype.setExpiresAt = function(value) {
  return jspb.Message.setWrapperField(this, 8, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.BlockUser.Token} returns this
 */
proto.BlockUser.Token.prototype.clearExpiresAt = function() {
  return this.setExpiresAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.BlockUser.Token.prototype.hasExpiresAt = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional bool encrypted = 9;
 * @return {boolean}
 */
proto.BlockUser.Token.prototype.getEncrypted = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 9, false));
};


/**
 * @param {boolean} value
 * @return {!proto.BlockUser.Token} returns this
 */
proto.BlockUser.Token.prototype.setEncrypted = function(value) {
  return jspb.Message.setProto3BooleanField(this, 9, value);
};


/**
 * optional string access_token = 10;
 * @return {string}
 */
proto.BlockUser.Token.prototype.getAccessToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.BlockUser.Token} returns this
 */
proto.BlockUser.Token.prototype.setAccessToken = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional string refresh_token = 11;
 * @return {string}
 */
proto.BlockUser.Token.prototype.getRefreshToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.BlockUser.Token} returns this
 */
proto.BlockUser.Token.prototype.setRefreshToken = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};


/**
 * optional int32 internal_encryption_level = 12;
 * @return {number}
 */
proto.BlockUser.Token.prototype.getInternalEncryptionLevel = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/**
 * @param {number} value
 * @return {!proto.BlockUser.Token} returns this
 */
proto.BlockUser.Token.prototype.setInternalEncryptionLevel = function(value) {
  return jspb.Message.setProto3IntField(this, 12, value);
};


/**
 * optional string logged_in_from = 13;
 * @return {string}
 */
proto.BlockUser.Token.prototype.getLoggedInFrom = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/**
 * @param {string} value
 * @return {!proto.BlockUser.Token} returns this
 */
proto.BlockUser.Token.prototype.setLoggedInFrom = function(value) {
  return jspb.Message.setProto3StringField(this, 13, value);
};


/**
 * optional TokenType type = 14;
 * @return {!proto.BlockUser.TokenType}
 */
proto.BlockUser.Token.prototype.getType = function() {
  return /** @type {!proto.BlockUser.TokenType} */ (jspb.Message.getFieldWithDefault(this, 14, 0));
};


/**
 * @param {!proto.BlockUser.TokenType} value
 * @return {!proto.BlockUser.Token} returns this
 */
proto.BlockUser.Token.prototype.setType = function(value) {
  return jspb.Message.setProto3EnumField(this, 14, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.BlockUser.ActiveMeasurement.prototype.toObject = function(opt_includeInstance) {
  return proto.BlockUser.ActiveMeasurement.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.BlockUser.ActiveMeasurement} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.BlockUser.ActiveMeasurement.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    averageSeconds: jspb.Message.getFieldWithDefault(msg, 2, 0),
    totalSeconds: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.BlockUser.ActiveMeasurement}
 */
proto.BlockUser.ActiveMeasurement.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.BlockUser.ActiveMeasurement;
  return proto.BlockUser.ActiveMeasurement.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.BlockUser.ActiveMeasurement} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.BlockUser.ActiveMeasurement}
 */
proto.BlockUser.ActiveMeasurement.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setAverageSeconds(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTotalSeconds(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.BlockUser.ActiveMeasurement.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.BlockUser.ActiveMeasurement.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.BlockUser.ActiveMeasurement} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.BlockUser.ActiveMeasurement.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getAverageSeconds();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getTotalSeconds();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.BlockUser.ActiveMeasurement.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.BlockUser.ActiveMeasurement} returns this
 */
proto.BlockUser.ActiveMeasurement.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int32 average_seconds = 2;
 * @return {number}
 */
proto.BlockUser.ActiveMeasurement.prototype.getAverageSeconds = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.BlockUser.ActiveMeasurement} returns this
 */
proto.BlockUser.ActiveMeasurement.prototype.setAverageSeconds = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 total_seconds = 3;
 * @return {number}
 */
proto.BlockUser.ActiveMeasurement.prototype.getTotalSeconds = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.BlockUser.ActiveMeasurement} returns this
 */
proto.BlockUser.ActiveMeasurement.prototype.setTotalSeconds = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.BlockUser.UserRequest.repeatedFields_ = [6];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.BlockUser.UserRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.BlockUser.UserRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.BlockUser.UserRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.BlockUser.UserRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    user: (f = msg.getUser()) && proto.BlockUser.User.toObject(includeInstance, f),
    update: (f = msg.getUpdate()) && proto.BlockUser.User.toObject(includeInstance, f),
    filter: (f = msg.getFilter()) && proto.BlockUser.UserFilter.toObject(includeInstance, f),
    namespace: jspb.Message.getFieldWithDefault(msg, 4, ""),
    encryptionKey: jspb.Message.getFieldWithDefault(msg, 5, ""),
    userBatchList: jspb.Message.toObjectList(msg.getUserBatchList(),
    proto.BlockUser.User.toObject, includeInstance),
    token: (f = msg.getToken()) && proto.BlockUser.Token.toObject(includeInstance, f),
    validatepassword: jspb.Message.getBooleanFieldWithDefault(msg, 8, false),
    cloudToken: jspb.Message.getFieldWithDefault(msg, 9, ""),
    tokenPointer: jspb.Message.getFieldWithDefault(msg, 10, ""),
    activeMeasurement: (f = msg.getActiveMeasurement()) && proto.BlockUser.ActiveMeasurement.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.BlockUser.UserRequest}
 */
proto.BlockUser.UserRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.BlockUser.UserRequest;
  return proto.BlockUser.UserRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.BlockUser.UserRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.BlockUser.UserRequest}
 */
proto.BlockUser.UserRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.BlockUser.User;
      reader.readMessage(value,proto.BlockUser.User.deserializeBinaryFromReader);
      msg.setUser(value);
      break;
    case 2:
      var value = new proto.BlockUser.User;
      reader.readMessage(value,proto.BlockUser.User.deserializeBinaryFromReader);
      msg.setUpdate(value);
      break;
    case 3:
      var value = new proto.BlockUser.UserFilter;
      reader.readMessage(value,proto.BlockUser.UserFilter.deserializeBinaryFromReader);
      msg.setFilter(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setNamespace(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setEncryptionKey(value);
      break;
    case 6:
      var value = new proto.BlockUser.User;
      reader.readMessage(value,proto.BlockUser.User.deserializeBinaryFromReader);
      msg.addUserBatch(value);
      break;
    case 7:
      var value = new proto.BlockUser.Token;
      reader.readMessage(value,proto.BlockUser.Token.deserializeBinaryFromReader);
      msg.setToken(value);
      break;
    case 8:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setValidatepassword(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setCloudToken(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setTokenPointer(value);
      break;
    case 11:
      var value = new proto.BlockUser.ActiveMeasurement;
      reader.readMessage(value,proto.BlockUser.ActiveMeasurement.deserializeBinaryFromReader);
      msg.setActiveMeasurement(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.BlockUser.UserRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.BlockUser.UserRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.BlockUser.UserRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.BlockUser.UserRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUser();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.BlockUser.User.serializeBinaryToWriter
    );
  }
  f = message.getUpdate();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.BlockUser.User.serializeBinaryToWriter
    );
  }
  f = message.getFilter();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.BlockUser.UserFilter.serializeBinaryToWriter
    );
  }
  f = message.getNamespace();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getEncryptionKey();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getUserBatchList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      6,
      f,
      proto.BlockUser.User.serializeBinaryToWriter
    );
  }
  f = message.getToken();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.BlockUser.Token.serializeBinaryToWriter
    );
  }
  f = message.getValidatepassword();
  if (f) {
    writer.writeBool(
      8,
      f
    );
  }
  f = message.getCloudToken();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getTokenPointer();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getActiveMeasurement();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      proto.BlockUser.ActiveMeasurement.serializeBinaryToWriter
    );
  }
};


/**
 * optional User user = 1;
 * @return {?proto.BlockUser.User}
 */
proto.BlockUser.UserRequest.prototype.getUser = function() {
  return /** @type{?proto.BlockUser.User} */ (
    jspb.Message.getWrapperField(this, proto.BlockUser.User, 1));
};


/**
 * @param {?proto.BlockUser.User|undefined} value
 * @return {!proto.BlockUser.UserRequest} returns this
*/
proto.BlockUser.UserRequest.prototype.setUser = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.BlockUser.UserRequest} returns this
 */
proto.BlockUser.UserRequest.prototype.clearUser = function() {
  return this.setUser(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.BlockUser.UserRequest.prototype.hasUser = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional User update = 2;
 * @return {?proto.BlockUser.User}
 */
proto.BlockUser.UserRequest.prototype.getUpdate = function() {
  return /** @type{?proto.BlockUser.User} */ (
    jspb.Message.getWrapperField(this, proto.BlockUser.User, 2));
};


/**
 * @param {?proto.BlockUser.User|undefined} value
 * @return {!proto.BlockUser.UserRequest} returns this
*/
proto.BlockUser.UserRequest.prototype.setUpdate = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.BlockUser.UserRequest} returns this
 */
proto.BlockUser.UserRequest.prototype.clearUpdate = function() {
  return this.setUpdate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.BlockUser.UserRequest.prototype.hasUpdate = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional UserFilter filter = 3;
 * @return {?proto.BlockUser.UserFilter}
 */
proto.BlockUser.UserRequest.prototype.getFilter = function() {
  return /** @type{?proto.BlockUser.UserFilter} */ (
    jspb.Message.getWrapperField(this, proto.BlockUser.UserFilter, 3));
};


/**
 * @param {?proto.BlockUser.UserFilter|undefined} value
 * @return {!proto.BlockUser.UserRequest} returns this
*/
proto.BlockUser.UserRequest.prototype.setFilter = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.BlockUser.UserRequest} returns this
 */
proto.BlockUser.UserRequest.prototype.clearFilter = function() {
  return this.setFilter(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.BlockUser.UserRequest.prototype.hasFilter = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string namespace = 4;
 * @return {string}
 */
proto.BlockUser.UserRequest.prototype.getNamespace = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.BlockUser.UserRequest} returns this
 */
proto.BlockUser.UserRequest.prototype.setNamespace = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string encryption_key = 5;
 * @return {string}
 */
proto.BlockUser.UserRequest.prototype.getEncryptionKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.BlockUser.UserRequest} returns this
 */
proto.BlockUser.UserRequest.prototype.setEncryptionKey = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * repeated User user_batch = 6;
 * @return {!Array<!proto.BlockUser.User>}
 */
proto.BlockUser.UserRequest.prototype.getUserBatchList = function() {
  return /** @type{!Array<!proto.BlockUser.User>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.BlockUser.User, 6));
};


/**
 * @param {!Array<!proto.BlockUser.User>} value
 * @return {!proto.BlockUser.UserRequest} returns this
*/
proto.BlockUser.UserRequest.prototype.setUserBatchList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 6, value);
};


/**
 * @param {!proto.BlockUser.User=} opt_value
 * @param {number=} opt_index
 * @return {!proto.BlockUser.User}
 */
proto.BlockUser.UserRequest.prototype.addUserBatch = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 6, opt_value, proto.BlockUser.User, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.BlockUser.UserRequest} returns this
 */
proto.BlockUser.UserRequest.prototype.clearUserBatchList = function() {
  return this.setUserBatchList([]);
};


/**
 * optional Token token = 7;
 * @return {?proto.BlockUser.Token}
 */
proto.BlockUser.UserRequest.prototype.getToken = function() {
  return /** @type{?proto.BlockUser.Token} */ (
    jspb.Message.getWrapperField(this, proto.BlockUser.Token, 7));
};


/**
 * @param {?proto.BlockUser.Token|undefined} value
 * @return {!proto.BlockUser.UserRequest} returns this
*/
proto.BlockUser.UserRequest.prototype.setToken = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.BlockUser.UserRequest} returns this
 */
proto.BlockUser.UserRequest.prototype.clearToken = function() {
  return this.setToken(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.BlockUser.UserRequest.prototype.hasToken = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional bool validatePassword = 8;
 * @return {boolean}
 */
proto.BlockUser.UserRequest.prototype.getValidatepassword = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 8, false));
};


/**
 * @param {boolean} value
 * @return {!proto.BlockUser.UserRequest} returns this
 */
proto.BlockUser.UserRequest.prototype.setValidatepassword = function(value) {
  return jspb.Message.setProto3BooleanField(this, 8, value);
};


/**
 * optional string cloud_token = 9;
 * @return {string}
 */
proto.BlockUser.UserRequest.prototype.getCloudToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.BlockUser.UserRequest} returns this
 */
proto.BlockUser.UserRequest.prototype.setCloudToken = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional string token_pointer = 10;
 * @return {string}
 */
proto.BlockUser.UserRequest.prototype.getTokenPointer = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.BlockUser.UserRequest} returns this
 */
proto.BlockUser.UserRequest.prototype.setTokenPointer = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional ActiveMeasurement active_measurement = 11;
 * @return {?proto.BlockUser.ActiveMeasurement}
 */
proto.BlockUser.UserRequest.prototype.getActiveMeasurement = function() {
  return /** @type{?proto.BlockUser.ActiveMeasurement} */ (
    jspb.Message.getWrapperField(this, proto.BlockUser.ActiveMeasurement, 11));
};


/**
 * @param {?proto.BlockUser.ActiveMeasurement|undefined} value
 * @return {!proto.BlockUser.UserRequest} returns this
*/
proto.BlockUser.UserRequest.prototype.setActiveMeasurement = function(value) {
  return jspb.Message.setWrapperField(this, 11, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.BlockUser.UserRequest} returns this
 */
proto.BlockUser.UserRequest.prototype.clearActiveMeasurement = function() {
  return this.setActiveMeasurement(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.BlockUser.UserRequest.prototype.hasActiveMeasurement = function() {
  return jspb.Message.getField(this, 11) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.BlockUser.UserResponse.repeatedFields_ = [2,5];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.BlockUser.UserResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.BlockUser.UserResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.BlockUser.UserResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.BlockUser.UserResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    user: (f = msg.getUser()) && proto.BlockUser.User.toObject(includeInstance, f),
    usersList: jspb.Message.toObjectList(msg.getUsersList(),
    proto.BlockUser.User.toObject, includeInstance),
    usersAmount: jspb.Message.getFieldWithDefault(msg, 3, 0),
    token: (f = msg.getToken()) && proto.BlockUser.Token.toObject(includeInstance, f),
    tokensList: jspb.Message.toObjectList(msg.getTokensList(),
    proto.BlockUser.Token.toObject, includeInstance),
    publicKeysMap: (f = msg.getPublicKeysMap()) ? f.toObject(includeInstance, undefined) : [],
    activeMeasurement: (f = msg.getActiveMeasurement()) && proto.BlockUser.ActiveMeasurement.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.BlockUser.UserResponse}
 */
proto.BlockUser.UserResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.BlockUser.UserResponse;
  return proto.BlockUser.UserResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.BlockUser.UserResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.BlockUser.UserResponse}
 */
proto.BlockUser.UserResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.BlockUser.User;
      reader.readMessage(value,proto.BlockUser.User.deserializeBinaryFromReader);
      msg.setUser(value);
      break;
    case 2:
      var value = new proto.BlockUser.User;
      reader.readMessage(value,proto.BlockUser.User.deserializeBinaryFromReader);
      msg.addUsers(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setUsersAmount(value);
      break;
    case 4:
      var value = new proto.BlockUser.Token;
      reader.readMessage(value,proto.BlockUser.Token.deserializeBinaryFromReader);
      msg.setToken(value);
      break;
    case 5:
      var value = new proto.BlockUser.Token;
      reader.readMessage(value,proto.BlockUser.Token.deserializeBinaryFromReader);
      msg.addTokens(value);
      break;
    case 6:
      var value = msg.getPublicKeysMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
         });
      break;
    case 7:
      var value = new proto.BlockUser.ActiveMeasurement;
      reader.readMessage(value,proto.BlockUser.ActiveMeasurement.deserializeBinaryFromReader);
      msg.setActiveMeasurement(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.BlockUser.UserResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.BlockUser.UserResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.BlockUser.UserResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.BlockUser.UserResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUser();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.BlockUser.User.serializeBinaryToWriter
    );
  }
  f = message.getUsersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.BlockUser.User.serializeBinaryToWriter
    );
  }
  f = message.getUsersAmount();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getToken();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.BlockUser.Token.serializeBinaryToWriter
    );
  }
  f = message.getTokensList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      proto.BlockUser.Token.serializeBinaryToWriter
    );
  }
  f = message.getPublicKeysMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(6, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
  f = message.getActiveMeasurement();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.BlockUser.ActiveMeasurement.serializeBinaryToWriter
    );
  }
};


/**
 * optional User user = 1;
 * @return {?proto.BlockUser.User}
 */
proto.BlockUser.UserResponse.prototype.getUser = function() {
  return /** @type{?proto.BlockUser.User} */ (
    jspb.Message.getWrapperField(this, proto.BlockUser.User, 1));
};


/**
 * @param {?proto.BlockUser.User|undefined} value
 * @return {!proto.BlockUser.UserResponse} returns this
*/
proto.BlockUser.UserResponse.prototype.setUser = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.BlockUser.UserResponse} returns this
 */
proto.BlockUser.UserResponse.prototype.clearUser = function() {
  return this.setUser(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.BlockUser.UserResponse.prototype.hasUser = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated User users = 2;
 * @return {!Array<!proto.BlockUser.User>}
 */
proto.BlockUser.UserResponse.prototype.getUsersList = function() {
  return /** @type{!Array<!proto.BlockUser.User>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.BlockUser.User, 2));
};


/**
 * @param {!Array<!proto.BlockUser.User>} value
 * @return {!proto.BlockUser.UserResponse} returns this
*/
proto.BlockUser.UserResponse.prototype.setUsersList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.BlockUser.User=} opt_value
 * @param {number=} opt_index
 * @return {!proto.BlockUser.User}
 */
proto.BlockUser.UserResponse.prototype.addUsers = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.BlockUser.User, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.BlockUser.UserResponse} returns this
 */
proto.BlockUser.UserResponse.prototype.clearUsersList = function() {
  return this.setUsersList([]);
};


/**
 * optional int64 users_amount = 3;
 * @return {number}
 */
proto.BlockUser.UserResponse.prototype.getUsersAmount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.BlockUser.UserResponse} returns this
 */
proto.BlockUser.UserResponse.prototype.setUsersAmount = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional Token token = 4;
 * @return {?proto.BlockUser.Token}
 */
proto.BlockUser.UserResponse.prototype.getToken = function() {
  return /** @type{?proto.BlockUser.Token} */ (
    jspb.Message.getWrapperField(this, proto.BlockUser.Token, 4));
};


/**
 * @param {?proto.BlockUser.Token|undefined} value
 * @return {!proto.BlockUser.UserResponse} returns this
*/
proto.BlockUser.UserResponse.prototype.setToken = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.BlockUser.UserResponse} returns this
 */
proto.BlockUser.UserResponse.prototype.clearToken = function() {
  return this.setToken(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.BlockUser.UserResponse.prototype.hasToken = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * repeated Token tokens = 5;
 * @return {!Array<!proto.BlockUser.Token>}
 */
proto.BlockUser.UserResponse.prototype.getTokensList = function() {
  return /** @type{!Array<!proto.BlockUser.Token>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.BlockUser.Token, 5));
};


/**
 * @param {!Array<!proto.BlockUser.Token>} value
 * @return {!proto.BlockUser.UserResponse} returns this
*/
proto.BlockUser.UserResponse.prototype.setTokensList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 5, value);
};


/**
 * @param {!proto.BlockUser.Token=} opt_value
 * @param {number=} opt_index
 * @return {!proto.BlockUser.Token}
 */
proto.BlockUser.UserResponse.prototype.addTokens = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.BlockUser.Token, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.BlockUser.UserResponse} returns this
 */
proto.BlockUser.UserResponse.prototype.clearTokensList = function() {
  return this.setTokensList([]);
};


/**
 * map<string, string> public_keys = 6;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.BlockUser.UserResponse.prototype.getPublicKeysMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 6, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.BlockUser.UserResponse} returns this
 */
proto.BlockUser.UserResponse.prototype.clearPublicKeysMap = function() {
  this.getPublicKeysMap().clear();
  return this;};


/**
 * optional ActiveMeasurement active_measurement = 7;
 * @return {?proto.BlockUser.ActiveMeasurement}
 */
proto.BlockUser.UserResponse.prototype.getActiveMeasurement = function() {
  return /** @type{?proto.BlockUser.ActiveMeasurement} */ (
    jspb.Message.getWrapperField(this, proto.BlockUser.ActiveMeasurement, 7));
};


/**
 * @param {?proto.BlockUser.ActiveMeasurement|undefined} value
 * @return {!proto.BlockUser.UserResponse} returns this
*/
proto.BlockUser.UserResponse.prototype.setActiveMeasurement = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.BlockUser.UserResponse} returns this
 */
proto.BlockUser.UserResponse.prototype.clearActiveMeasurement = function() {
  return this.setActiveMeasurement(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.BlockUser.UserResponse.prototype.hasActiveMeasurement = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * @enum {number}
 */
proto.BlockUser.TokenType = {
  TOKEN_TYPE_INVALID: 0,
  TOKEN_TYPE_ACCESS: 1,
  TOKEN_TYPE_REFRESH: 2
};

/**
 * @enum {number}
 */
proto.BlockUser.Platform = {
  INVALID_PLATFORM: 0,
  IOS: 1,
  ANDROID: 2,
  WEB: 3,
  MACOS: 4,
  LINUX: 5,
  WINDOWS: 6
};

goog.object.extend(exports, proto.BlockUser);
