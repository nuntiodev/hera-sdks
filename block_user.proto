syntax = "proto3";

package BlockUser;

option go_package = "./go_block";

import "google/protobuf/timestamp.proto";

service UserService {
    rpc Heartbeat(UserRequest) returns (UserResponse) {}
    rpc Create(UserRequest) returns (UserResponse) {}
    rpc UpdatePassword(UserRequest) returns (UserResponse) {}
    rpc UpdateMetadata(UserRequest) returns (UserResponse) {}
    rpc UpdateImage(UserRequest) returns (UserResponse) {}
    rpc UpdateEmail(UserRequest) returns (UserResponse) {}
    rpc UpdateOptionalId(UserRequest) returns (UserResponse) {}
    rpc UpdateSecurity(UserRequest) returns (UserResponse) {}
    rpc Get(UserRequest) returns (UserResponse) {}
    rpc GetAll(UserRequest) returns (UserResponse) {}
    rpc GetStream(UserRequest) returns (stream UserStream) {}
    rpc ValidateCredentials(UserRequest) returns (UserResponse) {}
    rpc Delete(UserRequest) returns (UserResponse) {}
    rpc DeleteBatch(UserRequest) returns (UserResponse) {}
    rpc DeleteNamespace(UserRequest) returns (UserResponse) {}
}

enum StreamType {
        CREATE = 0;
        UPDATE = 1;
        DELETE = 2;
}

enum MetadataType {
    METADATA_TYPE_JSON = 0;
    METADATA_TYPE_STRING = 1;
}


message User {
    string id = 1;
    string optional_id = 2;
    string namespace = 3;
    string role = 4;
    string email = 5;
    string password = 6;
    string image = 7;
    bool encrypted = 8;
    string metadata = 9;
	google.protobuf.Timestamp created_at = 10;
    google.protobuf.Timestamp updated_at = 11;
    google.protobuf.Timestamp encrypted_at = 12;
}

message UserFilter {
    enum SortBy {
        CREATED_AT = 0;
        UPDATE_AT = 1;
    }
    enum Order {
        INC = 0;
        DEC = 1;
    }
    int32 from = 1;
    int32 to = 2;
    SortBy sort = 3;
    Order order = 4;
}

message UserRequest {
    User user = 1;
    User update = 2;
    UserFilter filter = 3;
    string namespace = 4;
    string encryption_key = 5;
    string access_token = 6;
    repeated User user_batch = 7;
    repeated StreamType stream_type = 8;
    bool autoFollowStream = 9;
}

message UserResponse {
    User user = 1;
    repeated User users = 2;
    int64 users_amount = 3;
}

message UserStream {
    User user = 1;
    StreamType stream_type = 2;
}