syntax = "proto3";

package BlockUser;

option go_package = "./go_block";

import "google/protobuf/timestamp.proto";

service UserService {
    rpc Heartbeat(UserRequest) returns (UserResponse) {}
    rpc Create(UserRequest) returns (UserResponse) {}
    rpc UpdatePassword(UserRequest) returns (UserResponse) {}
    rpc UpdateMetadata(UserRequest) returns (UserResponse) {}
    rpc UpdateImage(UserRequest) returns (UserResponse) {}
    rpc UpdateEmail(UserRequest) returns (UserResponse) {}
    rpc UpdateOptionalId(UserRequest) returns (UserResponse) {}
    rpc UpdateSecurity(UserRequest) returns (UserResponse) {}
    rpc Get(UserRequest) returns (UserResponse) {}
    rpc GetAll(UserRequest) returns (UserResponse) {}
    rpc ValidateCredentials(UserRequest) returns (UserResponse) {}
    rpc Delete(UserRequest) returns (UserResponse) {}
    rpc DeleteNamespace(UserRequest) returns (UserResponse) {}
}

message User {
    string id = 1 [json_name="id"];
    string optional_id = 2 [json_name="optional_id"];
    string namespace = 3 [json_name="namespace"];
    string role = 4 [json_name="role"];
    string email = 5 [json_name="email"];
    string password = 6 [json_name="password"];
    string image = 7 [json_name="image"];
    bool encrypted = 8 [json_name="encrypted"];
    string metadata = 9 [json_name="metadata"];
	google.protobuf.Timestamp created_at = 10 [json_name="created_at"];
    google.protobuf.Timestamp updated_at = 11 [json_name="updated_at"];
}

enum MetadataType {
    METADATA_TYPE_JSON = 0;
    METADATA_TYPE_STRING = 1;
}

message UserFilter {
    enum SortBy {
        CREATED_AT = 0;
        UPDATE_AT = 1;
        EMAIL = 2;
    }
    enum Order {
        INC = 0;
        DEC = 1;
    }
    int32 from = 1 [json_name="from"];
    int32 to = 2 [json_name="to"];
    SortBy sort = 3 [json_name="sort"];
    Order order = 4 [json_name="order"];
}

message UserRequest {
    User user = 1 [json_name="user"];
    User update = 2 [json_name="update"];
    UserFilter filter = 3 [json_name="filter"];
    string namespace = 4 [json_name="namespace"];
    string encryption_key = 5 [json_name="encryption_key"];
    string access_token = 6 [json_name="access_token"];
}

message UserResponse {
    User user = 1;
    repeated User users = 2 [json_name="users"];
    int64 users_amount = 3 [json_name="users_amount"];
}