syntax = "proto3";

package Hera;

option go_package = "./go_hera";

import "google/protobuf/timestamp.proto";


service UserService {
    rpc Heartbeat(UserRequest) returns (UserResponse) {}
    rpc CreateUser(UserRequest) returns (UserResponse) {}
    rpc UpdateMetadata(UserRequest) returns (UserResponse) {}
    rpc UpdateUserProfile(UserRequest) returns (UserResponse) {}
    rpc UpdateUserContact(UserRequest) returns (UserResponse) {}
    rpc UpdateUserPassword(UserRequest) returns (UserResponse) {}

    rpc GetUser(UserRequest) returns (UserResponse) {}
    rpc ListUsers(UserRequest) returns (UserResponse) {}
    rpc ValidateCredentials(UserRequest) returns (UserResponse) {}
    rpc Login(UserRequest) returns (UserResponse) {}
    rpc DeleteUser(UserRequest) returns (UserResponse) {}
    rpc DeleteUsers(UserRequest) returns (UserResponse) {}
    rpc CreateToken(UserRequest) returns (UserResponse) {}
    rpc ValidateToken(UserRequest) returns (UserResponse) {}
    rpc BlockToken(UserRequest) returns (UserResponse) {}
    rpc RefreshToken(UserRequest) returns (UserResponse) {}
    rpc GetTokens(UserRequest) returns (UserResponse) {}
    rpc PublicKeys(UserRequest) returns (UserResponse) {}
    rpc SendVerificationEmail(UserRequest) returns (UserResponse) {}
    rpc VerifyEmail(UserRequest) returns (UserResponse) {}
    rpc SendVerificationText(UserRequest) returns (UserResponse) {}
    rpc VerifyPhone(UserRequest) returns (UserResponse) {}
    rpc SendResetPasswordEmail(UserRequest) returns (UserResponse) {}
    rpc SendResetPasswordText(UserRequest) returns (UserResponse) {}
    rpc ResetPassword(UserRequest) returns (UserResponse) {}
    rpc DeleteNamespace(UserRequest) returns (UserResponse) {}
    rpc CreateNamespace(UserRequest) returns (UserResponse) {}
    rpc RegisterPublicKey(UserRequest) returns (UserResponse) {}
    rpc GetConfig(UserRequest) returns (UserResponse) {}
    rpc UpdateConfig(UserRequest) returns (UserResponse) {}
    rpc DeleteConfig(UserRequest) returns (UserResponse) {}
}

enum LanguageCode {
    INVALID_LANGUAGE_CODE = 0;
    EN = 1;
    DK = 2;
}

message Config {
    string name = 1;
    string logo = 2;
    string nuntio_verify_id = 3;
    bool disable_signup = 4;
    bool disable_login = 5;
    google.protobuf.Timestamp created_at = 6;
    google.protobuf.Timestamp updated_at = 7;
    bool validate_password = 8;
    bool verify_email = 9;
    repeated LoginType supported_login_mechanisms = 10;
    bool verify_phone = 11;
    string public_key = 12;
}

message User {
    string id = 1;
    optional string username = 2;
    optional string email = 3;
    string password = 4;
    optional string image = 5;
    string metadata = 6;
	google.protobuf.Timestamp created_at = 7;
    google.protobuf.Timestamp updated_at = 8;
    optional string first_name = 9;
    optional string last_name = 10;
    optional google.protobuf.Timestamp birthdate = 11;

    google.protobuf.Timestamp verification_email_sent_at = 12;
    string email_verification_code = 13;
    google.protobuf.Timestamp verification_email_expires_at = 14;
    int32 verify_email_attempts = 15;
    string reset_password_code = 16;
    google.protobuf.Timestamp reset_password_email_sent_at = 17;
    google.protobuf.Timestamp reset_password_email_expires_at = 18;
    int32 reset_password_attempts = 19;
    repeated string verified_emails = 20;
    string email_hash = 21;
    optional string phone = 22;
    string phone_hash = 23;

    google.protobuf.Timestamp verification_text_sent_at = 24;
    string phone_verification_code = 25;
    repeated string verified_phone_numbers = 26;
    optional LanguageCode preferred_language = 27;
    string username_hash = 28;
}

message UserFilter {
    enum SortBy {
        CREATED_AT = 0;
        UPDATE_AT = 1;
    }
    enum Order {
        INC = 0;
        DEC = 1;
    }
    int32 from = 1;
    int32 to = 2;
    SortBy sort = 3;
    Order order = 4;
}

enum TokenType {
    TOKEN_TYPE_INVALID = 0;
    TOKEN_TYPE_ACCESS = 1;
    TOKEN_TYPE_REFRESH = 2;
}

enum Platform {
    INVALID_PLATFORM = 0;
    IOS = 1;
    ANDROID = 2;
    WEB = 3;
    MACOS = 4;
    LINUX = 5;
    WINDOWS = 6;
}

message Token {
    string id = 1;
    string user_id = 2;
    bool blocked = 3;
    string device_info = 4;
    google.protobuf.Timestamp blocked_at = 5;
    google.protobuf.Timestamp created_at = 6;
    google.protobuf.Timestamp used_at = 7;
    google.protobuf.Timestamp expires_at = 8;
    string access_token = 9;
    string refresh_token = 10;
    string logged_in_from = 11;
    TokenType type = 12;
}

enum LoginStatus {
    AUTHENTICATED = 0;
    NOT_AUTHENTICATED = 1;
    EMAIL_IS_NOT_VERIFIED = 2;
}

enum LoginType {
    LOGIN_TYPE_INVALID = 0;
    EMAIL_PASSWORD = 1;
    PHONE_PASSWORD = 2;
    USERNAME_PASSWORD = 3;
    EMAIL_VERIFICATION_CODE = 4;
    PHONE_VERIFICATION_CODE = 5;
}

message LoginSession {
    LoginStatus login_status = 1;
    google.protobuf.Timestamp email_sent_at = 2;
    google.protobuf.Timestamp email_expires_at = 3;
}

message UserRequest {
    User user = 1;
    User user_update = 2;
    UserFilter filter = 3;
    string namespace = 4;
    repeated User user_batch = 5;
    Token token = 6;
    string cloud_token = 7;
    string token_pointer = 8;
    Config config = 9;
    string email_verification_code = 10;
    string reset_password_code = 11;
}

message UserResponse {
    User user = 1;
    repeated User users = 2;
    int64 users_amount = 3;
    Token token = 4;
    repeated Token tokens = 5;
    map<string, string> public_keys = 6;
    Config config = 7;
    LoginSession login_session = 8;
    string private_key = 9;
}