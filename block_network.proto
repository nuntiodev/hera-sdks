syntax = "proto3";

package BlockNetwork;

option go_package = "./go_block";

import "google/protobuf/timestamp.proto";

service Service {
    rpc Heartbeat(Request) returns (Response) {}
    rpc Invite(NetworkRequest) returns (NetworkResponse) {}
    rpc Accept(NetworkRequest) returns (NetworkResponse) {}
    rpc GetConnections(NetworkRequest) returns (NetworkResponse) {}
    rpc Remove(NetworkRequest) returns (NetworkResponse) {}
}

enum ConnectionStatus {
    CONNECTION_SENT = 0;
    CONNECTION_ACCEPTED = 1;
    CONNECTION_DECLINED = 2;
}

message NetworkRequest {
    Connection connection = 1;
    ConnectionQuery query = 2;
    bool accept = 3;
}

message NetworkResponse {
    Connection connection = 1;
}

message ConnectionQuery {
    enum Filter {
        ALL = 0;
        ONLY_ACCEPTED = 1;
        ONLY_NOT_ACCEPTED = 2;
    }
    string userId = 1;
    string namespace = 2;
    Filter filter = 3;
}

message Connection {
    string id = 1;
    string idFrom = 2;
    string idTo = 3;
    ConnectionStatus status = 4;
    google.protobuf.Timestamp sentAt = 5;
    google.protobuf.Timestamp acceptedAt = 6;
}

message Request {}

message Response {
    string msg = 1;
}
